$Id: agenda.txt,v 1.28 2010-08-07 22:44:20 brandenb Exp $

Topics:

Notes: "-" means that this item is still open
       "x" means that it has been dealt with

  - update the list on
    http://code.google.com/p/pencil-code/people/list
    (Given to Andreas)
    >Please add your duties/info to this list. You can also
     send what info you want to be added to me and I can
     make the correction. andreas@astro.columbia.edu
       /Svedini
    
  - Avoid wrong names such as lncc for cc and lnTT for TT?
    -> Fixed by Anders (irho is alias to ilnrho when appropriate, etc.)
    is ok in videos, but not in pc_read_var
    (Given to Anders)

  x Polar coordinates - update
    (No update)
 
  - Anelastic solver - update (to check with Piyali and Boris)
      to edit pencil-code/src/README file
    (Piyali on Thursday) He presentation is checked in under
    pencil-code/www/UserMeetings/2010

  - Move the LOCK file to the data directory (or perhaps both), because the
    actual data are in the data tree and that may only be a link!
    OK with Wlad.
    -> Problem appears when two run directories share the same data dir.
    -> Wolfgang will fix this (but hasn't done it yet)
    I think it is better to keep the LOCK file as it is - Dhruba
    (if Wolfgang then done, else Axel)

  - Conservativeness.
    Need to check with Anders about status of WENO transport scheme
    (Not working yet in multiple-dimension, move to special module, 
    Given to Anders) 

  - cleaning up *.h files and check for breaks in modularity
    (Given to Axel: will work on this on Friday)

  - advec_lnrho=diffrho_hyper3_mesh*pi5_1*dx_1(l1:l2) issue
    (cf. Wlad's email of 18 July)
    (Given to Wlad: try to work on this on Friday)

  - What to do with the code that is unnecessary for most users? Instances are

      * boundary conditions: lambda effect not needed for stress-free boundary 
        in general. Should it go in a "leb" (lambda effect boundary) 
        boundary condition 

        (Dhruba: I would be against this one, because now it is easier to turn 
         lambda off and on with just change in one place in start.in .
        I do not see any harm in Lambda remaining in stress-free bc
        because in case lambda effect is not being used most of the
        lambda variables are not even being shared -Dhruba)

      * Clearest example of code growing ad infinitum: Continuity equation has 
        62 lines!

      * Force-free equations in entropy

      x Mean field equations in magnetic
        (Has now been exported to a separate module.)

  - What to do with the initial conditions? That's non-relevant code compiled 
    thousands of times. Should users keep their ICs to themselves?
    (Given to Wlad - add info on the InitialCondition module to the manual)

  - automated diagnostic
    (Axel: more important may now be to encapsulate 90% of the diagonistics
    to a module called magnetic/diagnostics_advanced.f90)

  - some other point from Alex
    to set diagnostics output in wall-clock times

  - crayon
    (Axel: there is the danger that this will actually be used and modified
    independently of the main trunk. Merging any developments back to the main
    code may later become impossible. We should therefore take this lesson to
    improve the current code and export ballast to elsewhere.)

  - move meanfield stuff to a separate module
    (done now for magnetic)

  - pencil-code/src/add-ons

  - check who is on which google email list
    http://groups.google.com/group/pencil-code-discuss/members
    Sample of people who are not receiving them:
    Alex Hubbard        <Alex.I.Hubbard@gmail.com>
    Vincent Duez        <vduez@astro.uni-bonn.de>
    Gustavo Guerrero    <guerrero@nordita.org>
    Fabio del Sordo     <fadiesis@gmail.com>
    Piyali Chatterjee

  - change the frequency of xyaverages through a new d1davg
    and allow the time units to be changed to wall-clock hours.

  - A common data file (like cdata.f90) to be shared between density,
    eos and entropy. We may call this cthermo.f90 (common thermodynamics).
    This may solve some problems with modularity of the code.  

  - Organize src folder into subfolders. Grep problem with Wolfgang is inexistant (use grep -r)
    [comment by wolfgang: Hei, no so fast. grep -r will grep not only in
    the .f90 (and similar source) files, but also in .o and .x files, so
    that's not a complete solution.
    I personally don't mind, since I am using ack / ack-grep or `git grep'
    which both give me what I need. But you others may need an extra
    script] 

  x Gravity initialized in initialize_gravity instead of init_gg - only module that 
    does so. What should be done? Initialize_gravity is called in runtime, but init_gg 
    is not - yet, a global variable has to be calculated in runtime. It seems a bit 
    weird to have an initial condition re-calculated in run-time. Not a good solution 
    to have initialize_gg calculate gravity, because gravity is way up in the compiling 
    sequence. Most module parameters (like EquationOfState) not available yet. 
    (Not that important - can initialize gravity in special. It will be read in runtime)

  - Mesh independent hyper viscosity and friends - correct equations? Depends on dx^5?

  - Should the tutorial (and lecture notes) be on svn?
    AB, AJ: no, and not yet at least, because teaching is a more personal
    thing and it becomes difficult for others to use the changes of others.

  - Colin to talk about good preprocessing

  - Colin to talk about auto-formating

  - email to discuss to only *link* those modules that we need in pc_setupsrc

  - nomodules compiles with syscalls instead of nosyscalls.... what is
  syscalls and what is it doing in the code? Add it to the manual.

  - syscalls messing up compilation (not found file_size_c in
  syscalls.f90). Why is there a C wrapper syscall_ansi.c?

  - diagnostics - encapsulate them?

  x remove all idl write diagnostic stuff 
    (done by Anders on 29 July)

  - Anders and Wlad will implement Alex' idea on diagnostic

  - Do the Athena's Double Mach Reflection

  - Is it possible to make Fortran tell the line number, so we can use in
    into fatal_error?
    [Wolfgang: Not in Fortran proper. Maybe with the FPP/CPP preprocessor
    (I'm not sure), but that's not desirable.

    Just knowing the line number doesn't help that much. We really want a
    stack trace, so the question is: can we get a stack trace from a
    call to fatal_error().]

  - Code a routine to convert vector fields between geometries, spherical/cartesian/cylindrical

  - Add information to manual of how to use vapor to to study output from Pencil Code
    (given to Gustavo) 

  - Write auxiliary variables to data/varname.dat. Maybe copy from index.pro?

  - pc_read_var and .r r read different things for the anelastic?
    It seems to be correct now after Piyali's update of var_content.
    (given to Wlad)
