###                          -*-Makefile-*- (for Emacs)
### $Id: Makefile.src,v 1.102 2005-02-18 17:51:13 theine Exp $
### Makefile for modular pencil code

## Default settings: they can be overwritten by src/Makefile.local
## which should be present in each local to run directory.

LIBSIG=
LDONLYFLAGS=
LDMPI=-lmpi

MPICOMM      = nompicomm
GLOBAL       = noglobal
GRID         =   grid
IO           =   io_dist
FFT          = nofft
FFTPACK      = nofftpack
POWER        = nopower_spectrum
DEBUG        =   debug_c

HYDRO        =   hydro
VISCOSITY    =   visc_const
DENSITY      =   density
ENTROPY      = noentropy
MAGNETIC     = nomagnetic
RADIATION    = noradiation
PSCALAR      = nopscalar
CHIRAL       = nochiral
DUSTVELOCITY = nodustvelocity
DUSTDENSITY  = nodustdensity
INTERSTELLAR = nointerstellar
COSMICRAY    = nocosmicray
IONIZATION   = noionization
STRUCT_FUNC  = nostruct_func
INITCOND_SPEC= noinitcond_spec

GRAVITY      = nograv
FORCING      = noforcing
SHEAR        = noshear
TIMEAVG      = notimeavg
SPECIAL      = nospecial

## This allows us to switch to double precision in Makefile.local
# FFLAGS_GENERAL=-r8
# CFLAGS_GENERAL=-DDOUBLE_PRECISION
FFLAGS_GENERAL=
CFLAGS_GENERAL=

## Overwrite settings that are local to each run directory
include Makefile.local

## Default settings
FC=f90
FFLAGS=-O3
FFLAGS=
F90FLAGS=
F77FLAGS=
CFLAGS=-O3 -DFUNDERSC=1
FCCLEANER=

## The following block (`Begin/End machine dependent') specifies compilers
## and switches for given architectures and machine names. See
## `perldoc adapt-mkfile' for full documentation of the syntax.
## Compiler flags:
##   FFLAGS are used by both the F90 compiler $(FC) and $(F77);
##   F90FLAGS are only used by $(FC)
##   F77FLAGS are only used by $(F77)

### Begin machine dependent

## IRIX64:
## SGI
#FC=f90
#FFLAGS= -64 -O3 -mips4
#FFLAGS= -auto_use mpi_interface -64 -O3 -macro_expand  #(gridur|embla|balder)
#FFLAGS= -auto_use mpi_interface -64 -O3 -C -macro_expand  #(sander|antares)
#FFLAGS= -pfalist -64 -O3 -mips4 -r10000 -C -macro_expand  #(Grand)
#FFLAGS= -64 -O3 -mips4 -r12000 #(Ukaff)
#FFLAGS= -64 -O3 -auto_use mpi_interface -mips4 #(ukaff|origin)
#FFLAGS= -64 -O3 -mips4 -r12000 -flist #(green)
#FFLAGS= -64 -O3 -mips4 -r12000 #(wrenstandard)
#FFLAGS= -64 -O3 -mips4 -r12000 -LNO:cs1=32k:cs2=8M #(wrencache)
#FFLAGS= -64 -O3 -mips4 -r12000 -LNO:cs1=32k:cs2=8M -I/share/apps/unsupported/pacx/standard/include -L/share/apps/unsupported/pacx/standard/lib #(wrenpacx)
#LDMPI= -L/share/apps/unsupported/pacx/standard/lib -lpacxf -lpacx -lmpi #(wrenpacx)
#FFLAGS= -64 -O3 -mips4 -r12000 -LNO:cs1=32k:cs2=8M -I/share/apps/unsupported/pacx/standard/include -L/share/apps/unsupported/pacx/standard/lib #(wren)
#LDMPI= -L/share/apps/unsupported/pacx/standard/lib -lpacxf -lpacx -lmpi #(wren)
##FC=/c/brandenb/pacx/bin/pacxfc #(tacsg2)
#FFLAGS=-64 -O3 -mips4 #(tacsg2)
#OPTFLAGS= -64
#F77=$(FC)
#CFLAGS=-O3 -64 -DFUNDERSC=1

## OSF1:
## Compaq/HP alpha
#FC=f95 #(Mhd.)
#FC=f90 #(Mhd.)
#OPTFLAGS=-fast -O5 
#OPTFLAGS=-fast -O5 -notransform_loops #(Mhd.)
#FFLAGS=$(OPTFLAGS) -tune ev6 -arch ev6 #(Mhd.)
#FFLAGS=$(OPTFLAGS) -warn argument_checking -warn declarations -warn unused
#F77=$(FC)
#F77

## Linux:
#FC=f95
#F77=$(FC)
#FFLAGS=-O3
#F90FLAGS=-u -tpp7
#F90FLAGS=
#LDMPI=
#CFLAGS=-O3 -DFUNDERSC=1 -Wall
##LDMPI=-lfmpich -lmpich -lmpe -lpmpich -llmpe # (copson) 
##LDMPI=-L/usr/X11R6/lib/ -lfmpich -lampe -lmpe -lpmpich -lX11 # (copson)
#FC=mpif90 # (Samos|fire|copson)
#FFLAGS=-gm -fast -tp p7 -fastsse -Mvect=sse -O2 -Minline # (copson)
#LDMPI=-lfmpich -lmpich -lmpe -lpmpich -llmpe # (nw43) 
#FC=/usr/lib/lam/bin/mpif95 #(Owen|Master)
#FC=g95 #(Cincinnatus)
#F77=$(FC) #(Cincinnatus)
#FFLAGS=-O4 -fno-second-underscore -I/usr/lib/mpich/include #(Cincinnatus)
#CFLAGS=-O3 -DFUNDERSC=1 #(Cincinnatus)
#LDMPI=-L/usr/lib/mpich/lib -lmpich #(Cincinnatus)
##FC=/home/brandenb/pacx/bin/pacxfc #PACX #(fe[0-3])
##FC=mpif77 #(fe[0-3])
#FC=mpif77 -pthread #(obelix)
##FC=ifc_6.0 -i_dynamic #(ns0|nq[0-9]*|nw[0-9]*)
#FC=ifort #(nw[0-9]*|hamlet|ns0|lynx|brahe|nq[0-9]*|aida[0-9]*)
#FFLAGS=-O3 -I/opt/mpich/include #(aida[0-9]*)
#LDMPI=-L /home/johansen/mpich/lib -lmpich #(aida[0-9]*)
#FC=mpif90 #(opto[1-4])
#FFLAGS=-O3 -I/home/johansen/mpich/include #(opto[1-4])
#LDMPI=-L/usr/local/ib_hpc/mpi/osu/mvapich-1.2.5.2/lib -lmpich #(opto[1-4])
#FC=ifc_6.0 -I/usr/local/lib/LAM/include #(fe[0-9])
##FC=ifort -I/usr/local/lib/LAM/include #(fe[0-9])
#FC=f95 -I/usr/lib/lam/include -mismatch #(morvern|renton|lanark)      
#FC=ifc -I/usr/lib/lam/include #(morvern|renton|lanark)
#FC=fort -I/usr/lib/lam/include #(mhd)
#FC=mpif90 #(Nunatak[0-9])
##FC=/home/brandenb/pacx/bin/pacxfc #(ns0)
#FC=ifc #(nl6|mmtf|nl19)
#FC=/opt/intel/compiler60/ia32/bin/ifc -I/usr/lib/lam/include #(taspd209a)
#FFLAGS=-O3 -Wl,-rpath,/opt/intel/compiler60/ia32/lib #(taspd209a)
#LDMPI=-I/usr/lib/lam/include -L/usr/lib/lam/lib -llammpio -lpmpi -llamf77mpi -lmpi -llam -lnsl -lutil #(taspd209a)
#FFLAGS=-O3 -L/home/dobler/lib -lc-2.2.93 #(nw46)
#FFLAGS=-O3 -Wl,-rpath,/usr/opt/intel/lib #(ns0)
#FFLAGS=-O3 -xW #(obelix)
#FC=f95 #(karbala)
#FC=pgf90 #(tycho|linux29|monolith)
##FC=ifort #(erland|bohm|igor|onsager)
#FC=pgf90 #(erland|bohm|igor|onsager)
#FC=efc #(user0[1-9])
#FC=lf95 #(pcponty)
#FFLAGS=-O # (Samos)
#FFLAGS= -fast -lm # (fire)
#FFLAGS= -fast -O5 -notransform_loops -tune ev6 -arch ev6 #(mhd)
#LDMPI=-static -L/usr/local/lib/LAM/lib -llamf77mpi -lmpi -llam -lnsl -lutil #(fe[0-4])
##LDMPI=-L/usr/local/lib/LAM/lib -llamf77mpi -lmpi -llam -lnsl -lutil #(fe[0-4])
##AB: next line uncommented on Tobi's advice
#LDMPI=-static -L/usr/local/lib/LAM/lib -llamf77mpi -lmpi -llam -lnsl -lutil -pthread #(fe[0-4])
#LDMPI=-L/usr/lib/lam/lib -llammpio -llamf77mpi -lmpi -llam -lutil #(morvern|renton|lanark)
#LDMPI=-static -L/opt/lam/lib -lmpi -llamf77mpi -llam #(nw50)
#LDMPI=-L/home/ajohan/f90/lib -llamf77mpi -lmpi -llam #(ns0|nq[0-9]*|nw[0-9]*)
#LDMPI=-Wl,-m elf_i386 -L/home/ajohan/f90/lib -llamf77mpi -lmpi -llam #(lynx)
#LDMPI=-lmpi #(brahe)
##FFLAGS=-O3 -ipo #PACX #(fe[0-3])
#FFLAGS=-fast -lm #(tycho|linux29)
##FFLAGS= #(erland|bohm|igor|onsager)
#FFLAGS= -fast -lm#(erland|bohm|igor|onsager)
#FFLAGS= -fast -lm -Nscampi   #(monolith)
##FFLAGS=-O3 -ipo #(fe[0-3])
#FFLAGS= #(fe[0-4])  ##(compiles faster/axel)
#FFLAGS=-O4 -C -gline -Wc,-malign-double #(Mephisto|Aladdin)
#FFLAGS=-O4 #(nl3)
#FFLAGS=-O3 #(nw[0-9]*|nl6|nl11|wormhole|sandin|lynx)
#FFLAGS=-fast -xNW -tpp7 -vec_report0 #(cosmo)
#FFLAGS=-O3 -ieee=full #(barilko)
#FFLAGS= #(davey[12])
#FCCLEANER=2>&1 | cleanf95 #(giga[0-1][0-9]|wormhole|obelix)
#FC=ifc -I/usr/lib/lam/include #(nw17|nl6|nl11|wormhole)  
#FC=ifc -w95 #(sandin)
#FC=f95 -dusty #(davey[12])  
#FC=ifc -I/usr/lib/lam/include -i_dynamic #(sandin|nl11)  
#FC=ifc -I/usr/lib/lam/include -i_dynamic #(wormhole)
#FC=ifort #(cosmo)
#CC=icc #(cosmo)
##FCCLEANER=2>&1 | cleanf95 #(Kolmogorov)
##FC=ifc -e90 #(Kolmogorov)  
##CC=gcc -m32 #(Kolmogorov)
#FC=ifort -stand f90 #(Kolmogorov)
#FFLAGS=-O3 #(Kolmogorov)
##CC=gcc #(Kolmogorov)
##CFLAGS=-O3 -DFUNDERSC=1 #(Kolmogorov)
#LDMPI=-I/usr/include -pthread -llammpio -llamf77mpi -lmpi -llam -lutil #(Kolmogorov)
#LDMPI=-L/usr/lib/lam/lib -llammpio -lmpi -llamf77mpi -lmpi -llam -lnsl -lutil -lpthread #(wormhole)
#LDMPI=-L/usr/lib/lam/lib -llammpio -lpmpi -llamf77mpi -lmpi -llam -lnsl -lutil #(nw17|nl6|nl11)
#LDMPI=-L/opt/mpich/lib #(nw43)
#LDMPI=-L/usr/local/mpich/lib #(pcponty)
#LDMPI= # (Samos|fire|sandin)
#LDMPI=-llammpio -llamf77mpi -lmpi -llam -lutil #(cosmo)
#LDMPI=-L/usr/lib/lam/lib -llam -lmpi -lpmpi -llamf77mpi -llammpi++ -llammpio -lnsl -lutil #(mhd)
#CFLAGS=-O3 -DFUNDERSC=1 -Wall -m32 #(lynx)
#CFLAGS=$(FFLAGS) -DFUNDERSC=1 #(cosmo|obelix)
#CFLAGS=-O3 -DFUNDERSC=2 -Wall #(mhd)
#F77=$(FC) -dusty #(nl3|Mephisto|Aladdin|mmtf|karbala|morvern|renton|lanark)
#F77=$(FC) -w90 -w95 #(morvern|renton|lanark)
#F77=$(FC) -lm  #(tycho|monolith)
#F77=$(FC) #(erland|bohm|igor|onsager)
#F77=$(FC) #(Owen|Master|cosmo|nl6|nw17|nl11|wormhole)
#F77FLAGS=-w90 #(nw[0-9]*|ns0|cosmo|nw17|nl6|nl11|wormhole|sandin)
#FC=ifc -i_dynamic -I/addon/shared/lam/include #(giga[0-9]*)  
#FFLAGS=-O2 -ipo -xW -tpp7 #(giga[0-9]*)  
#LDMPI=-L/addon/shared/lam/lib -llamf77mpi -lmpi -llam -lnsl -lutil -lpthread #(giga[0-9]*)
#FC=ifort #(lws.Stanford.EDU|lws2.Stanford.EDU)
#F77=$(FC) #(lws.Stanford.EDU|lws2.Stanford.EDU)
#FFLAGS=-O3 -ipo #(lws.Stanford.EDU|lws2.Stanford.EDU)
#LDMPI=-lmpi #(lws.Stanford.EDU|lws2.Stanford.EDU)
#CC=icc #(lws.Stanford.EDU|lws2.Stanford.EDU)
#CFLAGS=-O3 -ipo -DFUNDERSC=1 #(lws.Stanford.EDU|lws2.Stanford.EDU)

## Darwin:
## Power Macintosh
#FC=f95
#FFLAGS=-O3 
#LDMPI=

## SunOS:
## Sun
#FC=f90
#FC=pghpf #(Lomond)
#FFLAGS=-O4
#FFLAGS= -Msmp -O4  #(Lomond)
#CFLAGS=-O4 -DFUNDERSC=1
#CFLAGS=-O4 -DFUNDERSC=0 #(ursa)
#LDMPI=-L/opt/local/mpich/lib -lmpich -lsocket -lnsl -laio
#F77=$(FC)

## UNICOS/mk:
## Cray T3E
#FC=f90
#FFLAGS=-O3 -em

## HI-UX/MPP:
## Hitachi
#FC=mpif90
#F77=$(FC)
#FFLAGS=-lowercase -I/usr/mpi/include -O4 -pvec -parallel=0
#FFLAGS=-lowercase -Os -noparallel -O4
#CFLAGS=-O4 -DFUNDERSC=0
#LDMPI=-L/usr/mpi/lib/lib32 -lfmpi -lmpi

## SUPER-UX:
## NEC
#FC=f90 -I/usr/include
#F77=$(FC)
#FFLAGS=-C hopt

## AIX:
## IBM
#CFLAGS=-O3 -DFUNDERSC=0
#F77=xlf
#FC=xlf90
#FFLAGS=-I/usr/lpp/ppe.poe/include -I/usr/lpp/ppe.poe/include/thread -O5 -w
#F90FLAGS=-qsuffix=f=f90
#LDMPI=-F:mpxlf90

### End machine dependent

LD=$(FC)
LDFLAGS=$(FFLAGS) $(FFLAGS_GENERAL) $(LDONLYFLAGS)
# -Mpencil.map

## Generic rules:
.SUFFIXES:			# get rid of that annoying Modula rule
.SUFFIXES: .f .f90 .c .o

.f.o:
	$(F77) $(FFLAGS) $(FFLAGS_GENERAL) $(F77FLAGS) -c $*.f 
.f90.o:
	$(FC) $(FFLAGS) $(FFLAGS_GENERAL) $(F90FLAGS) -c $*.f90 
.c.o:
	$(CC) $(CFLAGS) $(CFLAGS_GENERAL) -c $*.c

# ---------------------------------------------------------------------- #
## Abbreviations

technical=cparam.o cdata.o general.o slices.o deriv.o boundcond.o filter.o $(INITCOND_SPEC).o initcond.o register.o prints.o $(TIMEAVG).o
physics=$(GLOBAL).o $(VISCOSITY).o $(HYDRO).o $(DENSITY).o $(FORCING).o $(GRAVITY).o $(INTERSTELLAR).o $(ENTROPY).o $(IONIZATION).o $(MAGNETIC).o $(SHEAR).o $(PSCALAR).o $(CHIRAL).o $(RADIATION).o $(DUSTVELOCITY).o $(DUSTDENSITY).o $(SPECIAL).o $(COSMICRAY).o
comm_deps=$(technical) sub.o $(IO).o wsnaps.o param_io.o $(MPICOMM).o $(physics) $(FFT).o $(FFTPACK).o $(POWER).o $(STRUCT_FUNC).o
start_deps_f90=$(comm_deps) $(GRID).o $(DEBUG).o
start_deps=$(start_deps_f90)
run_deps_f90=$(comm_deps) equ.o timestep.o
run_deps=$(run_deps_f90) $(DEBUG).o
start=start.o $(start_deps)
run=run.o $(run_deps)
read_videofiles_deps=cparam.o cdata.o general.o
read_videofiles=read_videofiles.o $(read_videofiles_deps)
read_vectorfiles_deps=cparam.o cdata.o general.o
read_vectorfiles=read_vectorfiles.o $(read_vectorfiles_deps)
TAG_SOURCE=$(run_deps_f90:.o=.f90) start.f90 run.f90 debug_c.c read_videofiles.f90

# ---------------------------------------------------------------------- #
## Symbolic targets

default: Makefile cparam.inc code

pacx: pacx-makefile cparam.inc code

Makefile: Makefile.src
	check-mkfile Makefile.local Makefile.src
	adapt-mkfile Makefile.src Makefile
pacx-makefile: Makefile.src
	pacx-adapt-mkfile Makefile.src pacx-Makefile
	cp pacx-Makefile Makefile
# Ignore cparam dependencies upon .f90 files to save a few time consuming
# recompiles! Just check for switching of modules instead.
cparam.inc: Makefile.src Makefile.local
	${PENCIL_HOME}/bin/mkcparam $(physics:.o=.f90) cparam.local -o cparam.inc
mpicomm_double.f90: mpicomm.f90
	sed -e 's/REAL/DOUBLE_PRECISION/g' mpicomm.f90 > mpicomm_double.f90
mpicomm_.f90: mpicomm.f90
	perl -pe 's/(MPI_[A-Z1-9_]*)([ (])/$$1_$$2/g' mpicomm.f90 > mpicomm_.f90
mpicomm_double_.f90: mpicomm_double.f90
	perl -pe 's/(MPI_[A-Z1-9_]*)([ (])/$$1_$$2/g' mpicomm_double.f90 > mpicomm_double_.f90

# The strange construct below is needed to have `make' realize there was
# an error even when last command in pipe is FCCLEANER: 
code:
	if [ ! -z "$(FCCLEANER)" ]; then \
	    ($(MAKE) start.x run.x read_videofiles.x read_vectorfiles.x \
	    || echo "PENCIL COMPILATION ERROR") $(FCCLEANER) ; \
	else \
	    $(MAKE) start.x run.x read_videofiles.x read_vectorfiles.x ; \
	fi

start.x: $(start) Makefile.local
	$(LD) $(LDFLAGS) $(start) $(LDMPI) -o start.x 

run.x: $(run) Makefile.local
	$(LD) $(LDFLAGS) $(run) $(LDMPI) $(LIBSIG) -o run.x 

# Handy for debugging; just compile by hand what is changed.
# When you use this you must be certain that everying is consistent.
linkonly:
	$(LD) $(LDFLAGS) $(start) $(LDMPI) -o start.x
	$(LD) $(LDFLAGS) $(run) $(LDMPI) $(LIBSIG) -o run.x 
#shorthand for this
l:
	$(MAKE) linkonly

# Needed for the underscore trick:
mpicomm_.f90:      mpicomm.f90

# Shortcut for debugging radiation:
rad:
	ifc -c radiation_exp.f90
	$(LD) $(LDFLAGS) $(start) $(LDMPI) -o start.x
	$(LD) $(LDFLAGS) $(run) $(LDMPI) $(LIBSIG) -o run.x 

# Remove all build files, but keep executables
# (misleading name..)
run:
	rm -f *.o *.mod *.d *.inc
	rm -f work.pc work.pcl

# Alternative to make run. To copy executables to parent directory.
# Make clean(n) could then be run on the source.
# (misleading name..)
install:
	cp *.x ../

# TAGS file for Emacs.
# $(TAG_SOURCE) requires nofftpack.f90 or fft.f90 to exist, so we
# temporarily create them
nofftpack.f90:
	@ touch nofftpack.f90
fft.f90:
	@ touch fft.f90
TAGS: $(TAG_SOURCE)
	etags $(TAG_SOURCE)
	@ if [ ! -s nofftpack.f90 ]; then rm -f nofftpack.f90; fi
	@ if [ ! -s fft.f90 ]; then rm -f fft.f90; fi

# Clean up, but leave makefile and TAGS
clean:
	rm -f *.x *.o *.mod *.d *.inc *.il mpicomm_.f90
	rm -f work.pc work.pcl

# Clean up all
cleann: clean
	rm -f Makefile TAGS mpicomm_.f90
	$(MAKE) -f Makefile.src Makefile
# same thing
cleanall: cleann

## ---------------------------------------------------------------------- #
## Code targets
## ---------------------------------------------------------------------- #

read_videofiles.x: $(read_videofiles)
	$(LD) $(LDFLAGS) $(read_videofiles) $(LDMPI) -o read_videofiles.x 

read_vectorfiles.x: $(read_vectorfiles)
	$(LD) $(LDFLAGS) $(read_vectorfiles) $(LDMPI) -o read_vectorfiles.x 

## ---------------------------------------------------------------------- #
## Dependencies
## ---------------------------------------------------------------------- #
start.o:     start.f90 $(start_deps)
run.o:       run.f90 $(run_deps)
read_videofiles.o: read_videofiles.f90 $(read_videofiles_deps)
read_vectorfiles.o: read_vectorfiles.f90 $(read_vectorfiles_deps)
#
cparam.o:    cparam.f90 cparam.local cparam.inc
cdata.o:     cdata.f90 cparam.o
$(GRID).o:   $(GRID).f90 cdata.o $(MPICOMM).o
general.o:   general.f90 cparam.o cdata.o
slices.o:    slices.f90 cdata.o sub.o $(IONIZATION).o
deriv.o:     deriv.f90 cdata.o $(MPICOMM).o
fft.o:	     fft.f
$(FFTPACK).o:   $(FFTPACK).f
#fft_nr.o:    fft_nr.f90
sub.o:       sub.f90 cdata.o deriv.o $(MPICOMM).o general.o
param_io.o:  param_io.f90 cdata.o $(MPICOMM).o sub.o timestep.o $(TIMEAVG).o $(physics)
register.o:  register.f90 cdata.o $(MPICOMM).o sub.o $(IO).o param_io.o $(physics) $(TIMEAVG).o prints.o
prints.o:    prints.f90 cdata.o sub.o param_io.o $(physics)
equ.o:       equ.f90 cdata.o $(MPICOMM).o sub.o $(physics) boundcond.o \
             $(GLOBAL).o 
boundcond.o: boundcond.f90 cdata.o $(ENTROPY).o $(MAGNETIC).o $(DENSITY).o $(RADIATION).o $(HYDRO).o
filter.o:    filter.f90 cdata.o sub.o boundcond.o
initcond.o:  initcond.f90 cdata.o $(MPICOMM).o general.o sub.o $(IONIZATION).o
kepvor.o : kepvor.f90 cdata.o general.o
noinitcond_spec.o: noinitcond_spec.f90 cdata.o general.o
timestep.o:  timestep.f90 cdata.o $(MPICOMM).o equ.o $(FORCING).o
wsnaps.o:    wsnaps.f90 cdata.o $(MPICOMM).o $(IO).o boundcond.o $(POWER).o $(STRUCT_FUNC).o $(RADIATION).o $(IONIZATION).o
#
$(MPICOMM).o:      $(MPICOMM).f90 cdata.o general.o $(FFT).o 
$(GLOBAL).o:       $(GLOBAL).f90 cdata.o $(IO).o $(MPICOMM).o
$(VISCOSITY).o:    $(VISCOSITY).f90 cdata.o cparam.o $(DENSITY).o sub.o
$(SHEAR).o:	   $(SHEAR).f90 $(MPICOMM).o cdata.o sub.o cparam.o $(HYDRO).o
$(GRAVITY).o:      $(GRAVITY).f90 cdata.o $(MPICOMM).o sub.o $(GLOBAL).o
$(FORCING).o:      $(FORCING).f90 cdata.o $(MPICOMM).o sub.o $(HYDRO).o
$(ENTROPY).o:      $(ENTROPY).f90 cdata.o $(MPICOMM).o sub.o initcond.o $(INITCOND_SPEC).o $(GLOBAL).o $(VISCOSITY).o $(HYDRO).o $(INTERSTELLAR).o $(IONIZATION).o $(SPECIAL).o
$(MAGNETIC).o:     $(MAGNETIC).f90 cdata.o $(MPICOMM).o sub.o $(IO).o initcond.o $(INITCOND_SPEC).o $(DENSITY).o $(FFT).o $(GRAVITY).o slices.o $(SPECIAL).o
$(RADIATION).o:	   $(RADIATION).f90 cdata.o $(MPICOMM).o sub.o initcond.o $(INITCOND_SPEC.o) $(DENSITY).o $(IONIZATION).o
$(HYDRO).o:        $(HYDRO).f90 cdata.o $(MPICOMM).o sub.o initcond.o $(INITCOND_SPEC).o $(VISCOSITY).o $(GRAVITY).o $(DENSITY).o $(MAGNETIC).o $(VISCOSITY).o slices.o $(SPECIAL).o $(COSMICRAY).o
$(DENSITY).o:      $(DENSITY).f90 cdata.o $(MPICOMM).o sub.o $(IO).o initcond.o $(INITCOND_SPEC).o $(GRAVITY).o $(SPECIAL).o $(IONIZATION).o
$(COSMICRAY).o:    $(COSMICRAY).f90 cdata.o $(MPICOMM).o sub.o initcond.o $(INITCOND_SPEC).o
$(PSCALAR).o:      $(PSCALAR).f90 cdata.o $(MPICOMM).o sub.o initcond.o $(INITCOND_SPEC).o
$(CHIRAL).o:       $(CHIRAL).f90 cdata.o $(MPICOMM).o sub.o initcond.o $(INITCOND_SPEC).o
$(DUSTVELOCITY).o: $(DUSTVELOCITY).f90 cdata.o $(MPICOMM).o sub.o initcond.o $(INITCOND_SPEC).o $(HYDRO).o $(GRAVITY).o
$(DUSTDENSITY).o:  $(DUSTDENSITY).f90 cdata.o $(MPICOMM).o sub.o initcond.o $(DUSTVELOCITY).o
$(INTERSTELLAR).o: $(INTERSTELLAR).f90 cdata.o $(MPICOMM).o sub.o $(INITCOND_SPEC).o $(IONIZATION).o
$(IONIZATION).o:   $(IONIZATION).f90 cdata.o $(MPICOMM).o sub.o   $(INITCOND_SPEC).o $(GRAVITY).o
$(IO).o:           $(IO).f90 cdata.o sub.o $(MPICOMM).o $(DEBUG).o
#$(TIMEAVG).o:      $(TIMEAVG).f90 cdata.o sub.o $(IO).o $(MPICOMM).o ctimeavg.local
$(TIMEAVG).o:      $(TIMEAVG).f90 cdata.o sub.o $(IO).o $(MPICOMM).o
$(FFT).o:	   cdata.o
nodebug.o:         nodebug.f90 cdata.o $(MPICOMM).o
$(POWER).o:        $(POWER).f90 cdata.o sub.o $(MPICOMM).o general.o
$(STRUCT_FUNC).o:  $(STRUCT_FUNC).f90 cdata.o sub.o $(MPICOMM).o general.o
$(SPECIAL).o:      $(SPECIAL).f90 cdata.o $(MPICOMM).o sub.o $(INITCOND_SPEC).o $(GLOBAL).o
#axeltest $(INITCOND_SPEC).o:$(INITCOND_SPEC).f90

# DO NOT DELETE
