#!/bin/bash 
#
#  $Id$
#
#  This script uses mkdatadir which links the subdirectory data
#  to some data disk (which is machine dependent and therefore
#  you may want to adapt mkdatadir for your particular machine).
#
#  Usage:
#     new run1 run2
#  Alternative usage, if one is already in run1
#     new run2
#  Options: -s or --same_source also mirrors the source directory
#

case $1 in
  ""|"-s"|"--same_source")
   echo "Using same source directory"
   same_source=1
   shift
esac

if [ $# -eq 2 ]; then
  #
  #  check whether absolute or relative path
  #  by checking whether target exists
  #
  if [ -d `pwd`/$1 ]; then
    olddir=`pwd`/$1
  else
    olddir=$1
  fi
  #
  #  same for newdir
  #
  if [ -d `pwd`/$2 ]; then
    newdir=`pwd`/$2
  else
    newdir=$2
  fi
else
  olddir=`pwd`
  cd ..
  #
  #  same for newdir
  #
  if [ -d `pwd`/$1 ]; then
    newdir=`pwd`/$1
  else
    newdir=$1
  fi
fi

#
#  save current working directory and make new run directory
#  and go there.
#
parentdir=`pwd`
echo "Parent directory: " $parentdir
if [ -d $newdir ]; then
  echo "The directory $newdir already exists!"
  echo "You had better stop and check..."
  exit
else
  mkdir $newdir
  echo "Created directory $newdir"
fi
cd $newdir
targetdir=`pwd`
#
#  In the new run directory, call mkdatadir, and
#  write file with name of directory from which
#  the new one is generated
#
$PENCIL_HOME/bin/mkdatadir

[ -e data/new_from.dir ] || touch data/new_from.dir
(echo $olddir; /bin/date) >> data/new_from.dir
#
#  make src dir and go there
#
  mkdir src
  cd src
#
#  use *.local files from previous src directory
#  and run setup-src
#
  echo "old source directory: " $olddir/src
  cp $olddir/src/*.local .
  echo "Use *.local files from:" `pwd`; ls -l *.local
  cd ..
#
#  if there exists a bin/setup-src.local file
#  it is being executed prior to setup-src
#  This gives the possibility to link your own routines
#  into src (setup-src below won't overwrite those)
#

  [ -f $parentdir/bin/setup-src.local ] && $parentdir/bin/setup-src.local
#
#  continue with the usual setup procedure
#
  $PENCIL_HOME/bin/setup-src
#
#  copy *.in and k.dat files into new directory
#  the k.dat file is actually only needed for forced
#  turbulence runs
#

cd $olddir
echo "Use *.in files from:" `pwd`; ls -l *.in
cp *.in $targetdir
[ -f k.dat ] && cp k.dat $targetdir
[ -f chemistry.dat ] && cp chemistry.dat $targetdir
[ -f chemistry_m.dat ] && cp chemistry_m.dat $targetdir
[ -f chemistry_p.dat ] && cp chemistry_p.dat $targetdir
[ -f parameters.pro ] && cp parameters.pro $targetdir
[ -f stratification.dat ] && cp stratification.dat $targetdir
[ -f chem.inp ] && cp chem.inp $targetdir
[ -f tran.dat ] && cp tran.dat $targetdir
[ -f air.dat ] && cp air.dat $targetdir
[ -f alpha_in.dat ] && cp alpha_in.dat $targetdir
#

#
#  if same_source, then link all *.x files from the original directory.
#  (We don't want to use a link to the entire secr directory, because
#  then a run directory that is checked in would not possess a record
#  of it's own src/*.local files.
#
if [ $same_source ]; then
  cd $targetdir/src
  pwd

  if [ -h $olddir/src ]; then
    ln -s `readlink $olddir/src/*.x .`
  else
    ln -s $olddir/src/*.x .
    cp $olddir/src/*.inc .
  fi
fi
