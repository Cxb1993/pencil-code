###                          -*-Makefile-*- (for Emacs)
### $Id: Makefile.src,v 1.205 2006-07-12 19:52:03 dintrans Exp $
### Makefile for modular pencil code

## Default settings: they can be overwritten by src/Makefile.local
## which should be present in each local to run directory.

LIBSIG=
LDONLYFLAGS=
LDMPI=-lmpi
DEBUGFLAGS=-g

MPICOMM      =   mpicomm
GLOBAL       = noglobal
GRID         =   grid
IO           =   io_dist
FFT          = nofft
FFTPACK      = nofftpack
POWER        = nopower_spectrum
DEBUG        =   debug_c

HYDRO        = nohydro
VISCOSITY    =   viscosity
DENSITY      = nodensity
ENTROPY      = noentropy
MAGNETIC     = nomagnetic
RADIATION    = noradiation
PSCALAR      = nopscalar
CHIRAL       = nochiral
DUSTVELOCITY = nodustvelocity
DUSTDENSITY  = nodustdensity
INTERSTELLAR = nointerstellar
COSMICRAY    = nocosmicray
COSMICRAYFLUX= nocosmicrayflux
EOS          =   eos_idealgas
STRUCT_FUNC  = nostruct_func
INITCOND_SPEC= noinitcond_spec
SHOCK        = noshock
TESTFIELD    = notestfield

GRAVITY      = nograv
SELFGRAVITY  = noselfgravity
FORCING      = noforcing
SHEAR        = noshear
TIMEAVG      = notimeavg
SPECIAL      = nospecial

PARTICLES_MAIN         = noparticles_main
PARTICLES_SUB          = noparticles_sub
PARTICLES              = noparticles
PARTICLES_RADIUS       = noparticles_radius
PARTICLES_NUMBER       = noparticles_number
PARTICLES_SELFGRAVITY  = noparticles_selfgravity

PLANET           =  noplanet

SHOCK_PROFILE = shock_profiles/noshock_profile
SHOCK_FINDER  = shock_finder

POISSON      = nopoisson

TIMESTEP     = timestep

## Single vs. double precision
REAL_PRECISION=default

# Default double flags (can be overwritten in machine-specific section):
FFLAGS_DOUBLE=-r8
CFLAGS_DOUBLE=-DDOUBLE_PRECISION

FFLAGS_GENERAL=
CFLAGS_GENERAL=

## Overwrite settings that are local to each run directory
include Makefile.local

## Double precision settings and similar. Must be included _after_
## Makefile.local, so we can set REAL_PRECISION=double there
include Makefile.inc

## Compile files with particle programming structure if particles are chosen.
ifneq ($(PARTICLES),noparticles)
  PARTICLES_MAIN =   particles_main
  PARTICLES_SUB  =   particles_sub
endif

## Default settings
FC=f90
FFLAGS=-O3
FFLAGS=
F90FLAGS=
F77=f90
F77FLAGS=
CFLAGS=-O3 -DFUNDERSC=1
FCCLEANER=
LIBMPISUFFIX=
MAKEOPTS=

## The following block (`Begin/End machine dependent') specifies compilers
## and switches for given architectures and machine names. See
## `perldoc adapt-mkfile' for full documentation of the syntax.
## Compiler flags:
##   FFLAGS are used by both the F90 compiler $(FC) and $(F77);
##   F90FLAGS are only used by $(FC)
##   F77FLAGS are only used by $(F77)

### Begin machine dependent

## IRIX64:
## SGI
#FC=f90
#FFLAGS= -64 -O3 -mips4
#FFLAGS= -auto_use mpi_interface -64 -O3 -macro_expand  #(gridur|embla|balder)
#FFLAGS= -auto_use mpi_interface -64 -O3 -C -macro_expand  #(sander|antares)
#FFLAGS= -pfalist -64 -O3 -mips4 -r10000 -C -macro_expand  #(Grand)
#FFLAGS= -64 -O3 -mips4 -r12000 #(Ukaff)
#FFLAGS= -64 -O3 -auto_use mpi_interface -mips4 #(ukaff|origin)
#FFLAGS= -64 -O3 -mips4 -r12000 -flist #(green)
#FFLAGS= -64 -O3 -mips4 -r12000 #(wrenstandard)
#FFLAGS= -64 -O3 -mips4 -r12000 -LNO:cs1=32k:cs2=8M #(wrencache)
#FFLAGS= -64 -O3 -mips4 -r12000 -LNO:cs1=32k:cs2=8M -I/share/apps/unsupported/pacx/standard/include -L/share/apps/unsupported/pacx/standard/lib #(wrenpacx)
#LDMPI= -L/share/apps/unsupported/pacx/standard/lib -lpacxf -lpacx -lmpi #(wrenpacx)
#FFLAGS= -64 -O3 -mips4 -r12000 -LNO:cs1=32k:cs2=8M -I/share/apps/unsupported/pacx/standard/include -L/share/apps/unsupported/pacx/standard/lib #(wren)
#LDMPI= -L/share/apps/unsupported/pacx/standard/lib -lpacxf -lpacx -lmpi #(wren)
##FC=/c/brandenb/pacx/bin/pacxfc #(tacsg2)
#FFLAGS=-64 -O3 -mips4 #(tacsg2)
#OPTFLAGS= -64
#F77=$(FC)
#CFLAGS=-O3 -64 -DFUNDERSC=1

## OSF1:
## Compaq/HP alpha
#FC=f95 #(Mhd.)
#FC=f90 #(Mhd.)
#OPTFLAGS=-fast -O5 
#OPTFLAGS=-fast -O5 -notransform_loops #(Mhd.)
#FFLAGS=$(OPTFLAGS) -tune ev6 -arch ev6 #(Mhd.)
#FFLAGS=$(OPTFLAGS) -warn argument_checking -warn declarations -warn unused
#F77=$(FC)
#LIBSIG=-lsig
#LIBSIG= #(gauss)

## Linux:
##
## OS Defaults
##
#FC=g95 -fno-second-underscore
#F77=$(FC)
#FFLAGS=-O3
#F90FLAGS=
#LDMPI=
#CFLAGS=-O3 -DFUNDERSC=1 -Wall
##
## Settings for individual machines
##
#FC=mpif90 #(Samos|fire)
#LDMPI=-lfmpich -lmpich -lmpe -lpmpich -llmpe #(nw43) 
#FC=/usr/lib/lam/bin/mpif95 #(Owen|Master)
#FC=g95 #(Cincinnatus|cosmo)
#F77=$(FC) #(Cincinnatus|cosmo)
#FFLAGS=-O4 -fno-second-underscore -I/usr/lib/mpich/include #(Cincinnatus)
#FFLAGS=-O4 -freal=nan -finteger=-2147483648 -fbounds-check -ftrace=full -Wall -Wno=140,141,109,112,137 -I/usr/lib/mpich/include #(cosmo)
#FFLAGS=-O4 -I/usr/include/mpi #(nl4)
#CFLAGS=-O3 -DFUNDERSC=1 #(Cincinnatus)
#CFLAGS=-O3 -DFUNDERSC=2 #(cosmo)
#LDMPI=-L/usr/lib/mpich/lib -lmpich #(Cincinnatus|cosmo)
##FC=/home/brandenb/pacx/bin/pacxfc #PACX #(fe[0-3])
##FC=mpif77 #(fe[0-3])
#FC=mpif77 -pthread #(obelix)
#FC=/home/ajohan/bin/ifc_7.1 #(ns0)
#FC=pgf90 #(lfc101)
#FFLAGS=-I /usr/local/Packages/mpich-1.2.6/ch-p4/include #(lfc101)
#LDMPI=-L /usr/local/Packages/mpich-1.2.6/ch-p4/lib/ -lmpich #(lfc101)
#LDONLYFLAGS=farg.o #(lfc101)
#FC=ifort #(nw[0-9]*|hamlet|lynx|brahe|nq[0-9]*|aida[0-9]*)
#FFLAGS=-O3 -I/home/johansen/mpich/include #(aida[0-9]*)
#LDMPI=-L /home/johansen/mpich/lib -lmpich #(aida[0-9]*)
#FC=ifort #(swift)
#FFLAGS=-O3 -I/usr/local/mpich/include #(swift)
#LDMPI=-L /usr/local/mpich/lib -lmpich #(swift)
#FFLAGS=-O3 -I/home/ajohan/mpich/include #(hamlet)
#LDMPI=-L /home/ajohan/mpich/lib -lmpich #(hamlet)
#FC=ifort #(opto[1-4])
#FFLAGS=-O3 -I/home/johansen/mpich/include/ #(opto[1-4])
#LDMPI=-Wl,-m elf_i386 -L/home/johansen/mpich/lib/ -lmpich #(opto[1-4])
##FC=mpif95n #(rio*|pia*)
##FFLAGS=-mismatch -O3 -I/afs/ipp/amd64_sles9/soft/mvapich-0.9.7/nag/include #(rio*|pia*)
#FC=mpif95i -v 8.1 #(rio*|pia*)
#FC=g95 -fno-second-underscore #(moria|balrog|sky*)
#FFLAGS= #(moria|balrog|sky*)
#LDMPI= #(moria|balrog|sky*)
#FC=ifc_6.0 -I/usr/local/lib/LAM/include #(fe[0-9])
#FC=/usr/local/bin/ifc -I/usr/local/lib/LAM/include #(fe[0-9])
#FC=/people/disk2/brandenb/bin/ifort -I/usr/local/lib/LAM/include #(fe[0-9])
#FC=~dobler/opt/intel/compiler70/ia32/bin/ifc -I/usr/local/lib/LAM/include #(fe[0-9])
##FC=ifort -I/usr/local/lib/LAM/include #(fe[0-9])
#FC=fort -I/usr/lib/lam/include #(mhd)
#FC=mpif90 #(Nunatak[0-9])
##FC=/home/brandenb/pacx/bin/pacxfc #(ns0)
#FC=ifc #(nl19)
#FC=ifort -I/usr/include/lam -L/usr/lib/lam/lib #(nl19)
#FC=/opt/intel/compiler60/ia32/bin/ifc -I/usr/lib/lam/include #(taspd209a)
#FFLAGS=-O3 -Wl,-rpath,/opt/intel/compiler60/ia32/lib #(taspd209a)
#LDMPI=-I/usr/lib/lam/include -L/usr/lib/lam/lib -llammpio -llamf77mpi -lmpi -llam -lnsl -lutil #(taspd209a)
#LIBMPISUFFIX=_#(taspd209a)
#FC=/opt/intel/compiler70/ia32/bin/ifc -I/usr/local/share/lam-mpi/include #(frontend)
#FFLAGS=-O3 -L/opt/intel/compiler70/bin/lib #(frontend)
#LIBMPISUFFIX=_#(frontend)
#LDMPI=-L/usr/local/share/lam-mpi/lib -llammpio -llamf77mpi -lmpi -llam -lutil -lbproc -ldl -lpthread #(frontend) 
#FFLAGS=-O3 -L/home/dobler/lib -lc-2.2.93 #(nw46)
#FFLAGS=-O3 -static-libcxa #(ns0|char)
#FFLAGS=-O3 -xW -vec_report0 #(obelix)
#FC=pgf90 #(tycho|linux29|monolith)
#FC=ifort #(erland|bohm|igor|onsager|char)
#FC=ifort  #(co-login)
#LDMPI=-lmpi  #(co-login)
##FC=pgf90 #(erland|bohm|igor|onsager)
#FC=efc #(user0[1-9])
#FC=efc #(srif-sb12-hpc-prod)
#FCCLEANER=2>&1 | scripts/cleanf95 #(srif-sb12-hpc-prod)
#FFLAGS= #(srif-sb12-hpc-prod)
#FFLAGS=-align -ipo -O2 #(srif-sb12-hpc-prod)
#LDMPI=-lmpi #(srif-sb12-hpc-prod)
#FC=lf95 #(pcponty)
#FFLAGS=-O # (Samos)
#FFLAGS= -fast -lm # (fire)
#FFLAGS= -fast -O5 -notransform_loops -tune ev6 -arch ev6 #(mhd)
##AB: next line uncommented on Tobi's advice
#LDMPI=-static -L/usr/local/lib/LAM/lib -llamf77mpi -lmpi -llam -lnsl -lutil -pthread #(fe[0-4])
#LDMPI=-static -L/opt/lam/lib -lmpi -llamf77mpi -llam #(nw50)
#LDMPI=-L/home/ajohan/f90/lib -llamf77mpi -lmpi -llam #(ns0|nq[0-9]*|nw[0-9]*)
#LDMPI=-Wl,-m elf_i386 -L/home/ajohan/f90/lib -llamf77mpi -lmpi -llam #(lynx)
#LDMPI=-lmpi #(brahe)
##FFLAGS=-O3 -ipo #PACX #(fe[0-3])
#FFLAGS=-fast -lm #(tycho|linux29)
##FFLAGS= #(erland|bohm|igor|onsager)
#FFLAGS= -fast -lm#(erland|bohm|igor|onsager)
#FFLAGS= -fast -lm -Nscampi   #(monolith)
#FFLAGS= #(fe[0-4])  ##(compiles faster/axel)
#FFLAGS=-O4 -C -gline -Wc,-malign-double #(Mephisto|Aladdin)
#FFLAGS=-O4 #(nl3)
#FFLAGS=-i_dynamic -O3 #(nw[0-9]*|nl11|sandin|lynx)
#FFLAGS=-O3  #(nw[0-9]*|nl11|sandin|lynx)
#FCCLEANER=2>&1 | scripts/cleanf95 #(obelix)
#FFLAGS= #(davey[12])
#FC=ifc -i_dynamic -I/usr/lib/lam/include #(nw17|nl11)
#FC=ifc -I/usr/lib/lam/include #(nw17|nl11)  
#FC=ifc -w95 #(sandin)
#FC=f95 -dusty #(davey[12])  
#FC=ifc -I/usr/lib/lam/include -i_dynamic #(sandin|nl11)  
#CC=mpicc #(obelix)
#FC=ifort -stand f90 #(Kolmogorov|ulysse|shal)
#FFLAGS=-O3 #(Kolmogorov|ulysse|shal)
##CC=gcc #(Kolmogorov|ulysse|shal)
##CFLAGS=-O3 -DFUNDERSC=1 #(Kolmogorov|ulysse|shal)
#LDMPI=-I/usr/include -pthread -llammpio -llamf77mpi -lmpi -llam -lutil #(Kolmogorov|shal)
#LIBMPISUFFIX=_#(Kolmogorov|shal)
#FC=g95 -fsecond-underscore #(Pencil)
#FFLAGS=-I/usr/include/lam -pthread -O3 #(Pencil)
#CFLAGS=-O3 -DFUNDERSC=2 #(Pencil)
#LDMPI=-L/usr/lib/lam/lib -llammpio -llamf77mpi -lmpi -llam -lutil -ldl #(Pencil)
#LDMPI=-L/usr/lib/lam/lib -llammpio -lpmpi -llamf77mpi -lmpi -llam -lnsl -lutil #(nw17|nl11)
#LDMPI=-L/opt/mpich/lib #(nw43)
#LDMPI=-L/usr/local/mpich/lib #(pcponty)
#LDMPI= # (Samos|fire|sandin)
#LDMPI=-L/usr/lib/lam/lib -llam -lmpi -lpmpi -llamf77mpi -llammpi++ -llammpio -lnsl -lutil #(mhd)
#CFLAGS=-O3 -DFUNDERSC=1 -Wall -m32 #(lynx|opto[1-4])
#CFLAGS=-DFUNDERSC=1 #(obelix)
#CFLAGS=-O3 -DFUNDERSC=2 -Wall #(mhd)
#F77=$(FC) -dusty #(nl3|Mephisto|Aladdin)
#F77=$(FC) -lm  #(tycho|monolith)
#F77=$(FC) #(erland|bohm|igor|onsager)
#F77=$(FC) #(Owen|Master|nw17|nl11)
#F77FLAGS=-w90 #(nw[0-9]*|ns0|nw17|nl11|sandin)
#FC=ifort #(lws.Stanford.EDU|lws2.Stanford.EDU)
#F77=$(FC) #(lws.Stanford.EDU|lws2.Stanford.EDU)
#FFLAGS=-O3 -ipo #(lws.Stanford.EDU|lws2.Stanford.EDU)
#LDMPI=-lmpi #(lws.Stanford.EDU|lws2.Stanford.EDU)
#CC=icc #(lws.Stanford.EDU|lws2.Stanford.EDU)
#CFLAGS=-O3 -ipo -DFUNDERSC=1 #(lws.Stanford.EDU|lws2.Stanford.EDU)
#FC=ifort #(damtp)
#FFLAGS=  #(damtp)
#CFLAGS=-O3  -DFUNDERSC=1 #(damtp)
#LDMPI=-I/usr/include -pthread  -llamf77mpi -lmpi -llam -lutil #(damtp)
##
## Axel on h05n35 (ifc 8.1)
##
#FC=ifort #(h05n35*)
#FFLAGS=-I/pdc/vol/lam/7.0.4/system/include -O3 #(h05n35*)
#CC=icc #(h05n35*)
#CFLAGS=-O3 -DFUNDERSC=1 #(h05n35*)
#LDMPI=-I/pdc/vol/lam/7.0.4/system/include -pthread -L/pdc/vol/gm/2.0.6/lib -L/pdc/vol/lam/7.0.4/system/lib -llammpio -llamf77mpi -lmpi -llam -lutil -lgm #(h05n35*)
#LIBMPISUFFIX=_#(h05n35*)
##
## Axel on Horseshoe (ifc 9.0)
##
#FC=~brandenb/apps/intel/fc/9.0/bin/ifort #(fe[0-9])
#FFLAGS=-I/usr/local/lib/LAM/include -O3 -assume 2underscores #(fe[0-4])
#CC=~brandenb/apps/intel/cc/9.0/bin/icc #(fe[0-9])
#CFLAGS=-O3 -DFUNDERSC=2 #(fe[0-4])
#LDMPI=-pthread -L/usr/local/lib/LAM/lib -llammpio -llamf77mpi -lmpi -llam -lutil #(fe[0-4])
##
## Axel on Horseshoe (ifc 7.1)
##
#FC=~dobler/opt/intel/compiler70/ia32/bin/ifc #(fe[0-9])
#FFLAGS=-I/usr/local/lib/LAM/include -O3 #(fe[0-4])
#CC=icc #(fe[0-9])
#CFLAGS=-O3 -DFUNDERSC=1 #(fe[0-9])
#LDMPI=-static -L/usr/local/lib/LAM/lib -llamf77mpi -lmpi -llam -lnsl -lutil -pthread #(fe[0-4])
#LIBMPISUFFIX=_#(fe[0-4])
##
## Axel's laptop (nl6, 2.0 GHz)
##
#FC=g95 #(nl6)
#FFLAGS=-freal=nan -finteger=-2147483648 -fbounds-check -ftrace=full -Wall -Wno=140,141,109,112,137 -I/usr/include/lam #(nl6)
#LDMPI=-L/usr/lib/lam/lib -llammpio -llamf77mpi -lmpi -llam -lutil #(nl6)
#CFLAGS=-DFUNDERSC=2 #(nl6)
##
#FC=ifort #(nl6)
#FFLAGS=-O3 -I/usr/include/lam #(nl6)
#LDMPI=-I/usr/include/lam -L/usr/lib/lam/lib -llammpio -llamf77mpi -lmpi -llam -lutil #(nl6)
#CFLAGS=-O3 -DFUNDERSC=1 -Wall #(nl6)
#F77FLAGS=-w90 #(nl6)
##
## Natalia's laptop (Natalia, 1.8 GHz)
##
##FC=gfortran #(natalia)
#FC=ifort #(nbabkovs)
##
## renton & morvern (ngrs's desktop & laptop)
##
#FC=ifort #(renton|morvern)
#FFLAGS=-O3 -I/usr/lib/lam/include #(renton|morvern)
#LDMPI=-L/usr/lib/lam/lib -llammpio -llamf77mpi -lmpi -llam -lutil #(renton|morvern)
#F77FLAGS=-w90 #(renton|morvern)
#LIBMPISUFFIX=_#(renton|morvern)
##
## barilko Apichat Neamvonk's desktop
##
#FC=ifort #(barilko)
#FFLAGS=-O3 -I/usr/local/lib/idl/lam/include #(barilko)
#LDMPI=-I/usr/local/lib/idl/lam/include -L/usr/local/lib/idl/lam/lib -llammpio -llamf77mpi -lmpi -llam -lutil #(barilko)
#F77FLAGS=-w90 #(barilko)
##
## wormhole Tony's Laptop
##
#MAKEOPTS=-j 3 #(wormhole)
#FFLAGS=-CA -CV -CS -CB -tpp7 -vec_report0 #(wormhole)
#FFLAGS=-O2 -align -tpp7 -vec_report0 #(wormhole)
#FFLAGS=-O2 -mp -vec_report0 #(wormhole)
#FFLAGS=-O3  #(wormhole)
#FCCLEANER=2>&1 | scripts/cleanf95 #(wormhole)
#FC=ifc -i_dynamic -I/usr/lib/lam/include #(wormhole)  
#FC=ifort #(wormhole)  
#LDMPI= #(wormhole)
#LIBMPISUFFIX=_#(wormhole)
##LDMPI=-llammpio -lmpi -llamf77mpi -lmpi -llam -lnsl -lutil -lpthread #(wormhole)
##LDMPI=-I/usr/include -pthread -llammpio -llamf77mpi -lmpi -llam -lutil -ldl #(wormhole)
#LDMPI=-I/usr/include -pthread -llammpio -llamf77mpi -lmpi -llam -lutil -ldl #(wormhole)
#F77=$(FC) #(wormhole)
#F77FLAGS=-w90 #(wormhole)
##
## starlink Newcastle's general access machine 
##
#FC=ifort -static -I/usr/local/lib/idl/lam/include #(starlink)
#LDMPI=-L/usr/local/lib/idl/lam/lib -llammpio -lmpi -llamf77mpi -lmpi -llam -lnsl -lutil -lpthread #(starlink)
#LIBMPISUFFIX=_#(starlink)
#MAKEOPTS=-j 3 #(starlink)
#
## Hades -- Wlad's laptop
##
#FC=ifort #(hades)
#MPI_HOME=/home/wlyra/test/lib #(hades)
#MPI_LDLIBS= -llammpio -llamf77mpi -lmpi -llam -lutil -ldl #(hades) 
#FFLAGS=-I/usr/include/mpi -O3 #(hades)
#LIBMPISUFFIX=_#(hades)
#LDMPI=-L$(MPI_HOME) -pthread $(MPI_LDLIBS) #(hades)
##
## Andrew's Laptop (wkfg)
##
#FC=mpif90 #(wkfg)
#FFLAGS=-O2 -frecord-marker=4 -mtune=athlon-4 #(wkfg)
#FFLAGS_DOUBLE= -fdefault-real-8 #(wkfg)
##
## clx IBM Linux Cluster, Bologna IT
##
#LDMPI=    #(node[0-9]*)
#FC=mpif90 # (node[0-9]*)
#CC=mpicc  # (node[0-9]*)
#FFLAGS=-fast -Mvect=sse -Mipa -Minline  # (node[0-9]*)
#FFLAGS=-fast -tp p7 -fastsse -Mvect=sse -O2 # (node[0-9]*)
##
## giga[0-9] Newcastle eScience (tony,dave,greame)
##
#MAKEOPTS=-j 3 #(giga[0-9]*)
#FC=mpif90 -static #(giga[0-9]*)  
##FC=gfortran_4win -static -I/addon/shared/lam/include #(giga01)  
##CC=gcc_4win -static -I/addon/shared/lam/include #(giga01)  
#FCCLEANER=2>&1 | scripts/cleanf95 #(giga[0-9]*)
#FCCLEANER=  #(giga01)
#FFLAGS=-O0 -CA -CB -CS -CV #(giga[0-9]*)  
#FFLAGS=-O2 -ipo -tpp7 -vec_report0 #(giga[0-9]*)  
#FFLAGS=-C -tpp7 -vec_report0  #(giga[0-9]*)  
#FFLAGS=-O2 -mp -vec_report0 #(giga[0-9]*)  
#LDMPI= #(giga[0-9]*)
##
## St. Andrews Copson Cluster (tony,dave,greame)
## copson.st-and.ac.uk 
##
#FC=mpif90 # (copson)
#FFLAGS=-gm -fast -Mvect=sse -Mipa -Minline # (copson)
#FFLAGS=-gm -fast -tp p7 -fastsse -Mvect=sse -O2 -Minline # (copson)
#FFLAGS=-gm -fast -tp p7 -fastsse -Mvect=sse -O2 # (copson)
#LDMPI= # (copson)
##
#FC=ifc #(gwdu102)
#FFLAGS=-O3 -I/opt/scali/include #(gwdu102)  
#LDMPI=-L/opt/scali/lib -lmpi -lfmpi #(gwdu102)
##
## Uppsala cluster - (nut is RA's front node)
## www.uppmax.uu.se
#FC=pgf90 #(nut) 
#MPI_HOME= /opt/scali#(nut)
#MPI_LDLIBS= -lmpi -lfmpi #(nut) 
#F90=$(FC) #(nut)
#F95=$(FC) #(nut)
#CC=mpicc #(nut)
#FFLAGS=-D_REENTRANT -I$(MPI_HOME)/include -O3 -tp k8-64 #(nut)
#CFLAGS=-D_REENTRANT -I$(MPI_HOME)/include -DFUNDERSC=1 -O3 -tp k8-64 #(nut)
#LDMPI= -L$(MPI_HOME)/lib64 $(MPI_LDLIBS)  #(nut)
##
##
## CSC cluster - (Espoo, Finland)
## www.csc.fi
#FC=mpif90 #(sepeli) 
#F90=$(FC) #(sepeli)
#CC=mpicc #(sepeli)
#FFLAGS=-O2 #(sepeli)
#CFLAGS=-DFUNDERSC=1 -O3 #(sepeli)
#LDMPI= #(sepeli)
##
##
## DCSC cluster - (Copenhagen, not Odense!)
## www.dcsc.ku.dk
#FC=pgf90 #(fend0[1-3]) 
#CC=pgcc #(fend0[1-3])
#FFLAGS=-fastsse -tp k8-64e -I/usr/local/topspin/mpi/mpich/include #(fend0[1-3])
#CFLAGS=-fastsse -tp k8-64e -DFUNDERSC=1 #(fend0[1-3])
#LDMPI=-L/usr/local/topspin/mpi/mpich/lib64 -lmpich -lpthread -lmpich_p #(fend0[1-3])
##
## Altix clusters at DCSC (brahe) and Columbia (cfe2)
#FC=ifort #(brahe|cfe2)
#CC=icc #(brahe|cfe2)
#FFLAGS=-O3 #(brahe|cfe2)
#CFLAGS=-O3 -DFUNDERSC=1 #(brahe|cfe2)
#LDMPI=-lmpi #(brahe|cfe2)


## Darwin:
## Power Macintosh
#FC=g95
#F77=$(FC)
#FFLAGS=-O3
#CFLAGS=-DFUNDERSC=2
#LDMPI=
#FC=xlf90 #(Nils)
#F77=xlf  #(Nils)
#FFLAGS= -w -qsuppress=1501-510  #(Nils)
#F90FLAGS=-qsuffix=f=f90 #(Nils)
#CFLAGS=-O3 -DFUNDERSC=0 #(Nils)
#LDMPI=-lSystemStubs #(easymac)
##
## Tarek's laptop (PowerBook G4)
##
#FC=gfortran #(dendara|lapc|tay21)
#FC=g95 -fno-second-underscore #(dendara|lapc|tay21)
##FFLAGS=  -ftrace=full   #(dendara|lapc|tay21)
#CC= gcc-3.3 -03 #(dendara|lapc|tay21)
#FFLAGS= -O2 #(dendara|lapc|tay21)
##LDMPI= -L${HOME}/opt/lib  #(dendara|lapc|tay21)
##
## Petri's laptop (PowerBook G4)
##
#FC=g95 #(Chandrasekhar|sunpci1)
#CC=gcc-3.3 #(Chandrasekhar|sunpci1)
#FFLAGS=-O3 #(Chandrasekhar|sunpci1)
#CFLAGS=-O3 -DFUNDERSC=2 #(Chandrasekhar|sunpci1)


## SunOS:
## Solaris
#CC=mpcc #(corona[1-2])
#FC=f90
#FC=pghpf #(Lomond)
#FC=mpf90 #(corona[1-2])
#FFLAGS=-O4
#FFLAGS=-O3 -dalign -xarch=v9b  #(corona[1-2])
#FFLAGS= -Msmp -O4  #(Lomond)
#CFLAGS=-O4 -DFUNDERSC=1
#CFLAGS=-O4 -DFUNDERSC=0 #(ursa)
#CFLAGS=-O3 -dalign -xarch=v9b -DFUNDERSC=1 #(corona[1-2])
#LDMPI=-L/opt/local/mpich/lib -lmpich -lsocket -lnsl -laio
#LDMPI=-lmpi  #(corona[1-2])
#F77=$(FC)

## UNICOS/mk:
## Cray T3E
#FC=f90
#FFLAGS=-O3 -em

## HI-UX/MPP:
## Hitachi
#FC=mpif90
#F77=$(FC)
#FFLAGS=-lowercase -I/usr/mpi/include -O4 -pvec -parallel=0
#FFLAGS=-lowercase -Os -noparallel -O4
#CFLAGS=-O4 -DFUNDERSC=0
#LDMPI=-L/usr/mpi/lib/lib32 -lfmpi -lmpi

## SUPER-UX:
## NEC
#FC=f90 -I/usr/include
#F77=$(FC)
#FFLAGS=-C hopt

## AIX:
## IBM
#CFLAGS=-O3 -DFUNDERSC=0
#F77=xlf
#FC=xlf90
#FFLAGS=-I/usr/lpp/ppe.poe/include -I/usr/lpp/ppe.poe/include/thread -O5 -w
#F90FLAGS=-qsuffix=f=f90
#LDMPI=-F:mpxlf90
#FC=mpxlf90 #(sp[0-1]*)
#F77=mpxlf #(sp[0-1]*)
#CC=mpcc #(sp[0-1]*)
#CFLAGS=-qarch=pwr4 -qtune=pwr4 -q64 #(sp[0-1]*)
#FFLAGS=-qarch=pwr4 -qtune=pwr4 -q64 #(sp[0-1]*)
#CFLAGS=-O5 -qarch=pwr4 -qtune=pwr4 -q64 #(sp[0-1]*)
#FFLAGS=-O5 -qarch=pwr4 -qtune=pwr4 -q64 #(sp[0-1]*)
#LDMPI= #(sp[0-1]*)
#FC=mpxlf90_r #(p690*)
#CC=mpcc_r #(p690*)
#FFLAGS=-O2 -qarch=pwr4 -qtune=pwr4 #(p690*)
#CFLAGS=-qarch=pwr4 -qtune=pwr4 -DFUNDERSC=0 #(p690*)
#LDMPI= #(p690*)
### -bmaxdata:0x7000000


### End machine dependent

LD=$(FC)
LDFLAGS=$(FFLAGS) $(FFLAGS_GENERAL) $(LDONLYFLAGS)
MPICOMM_FIX=$(MPICOMM)$(LIBMPISUFFIX)
# -Mpencil.map

## Generic rules:
.SUFFIXES:			# get rid of that annoying Modula rule
.SUFFIXES: .f .f90 .c .o .inc .h

.f.o:
	$(F77) $(FFLAGS) $(FFLAGS_GENERAL) $(F77FLAGS)  -o $*.o -c $*.f 
.f90.o:
	$(FC) $(FFLAGS) $(FFLAGS_GENERAL) $(F90FLAGS) -o $*.o -c $*.f90 
.c.o:
	$(CC) $(CFLAGS) $(CFLAGS_GENERAL) -o $*.o -c $*.c

#
# ---------------------------------------------------------------------- #
## Abbreviations

technical=cparam.o cdata.o particles_cdata.o messages.o general.o slices.o deriv.o boundcond.o filter.o $(INITCOND_SPEC).o initcond.o register.o prints.o $(TIMEAVG).o persist.o
physics=$(GLOBAL).o $(VISCOSITY).o $(SHOCK).o $(HYDRO).o $(DENSITY).o $(FORCING).o $(GRAVITY).o $(POISSON).o $(SELFGRAVITY).o $(INTERSTELLAR).o $(ENTROPY).o $(EOS).o $(MAGNETIC).o $(SHEAR).o $(PSCALAR).o $(CHIRAL).o $(RADIATION).o $(DUSTVELOCITY).o $(DUSTDENSITY).o $(SPECIAL).o $(COSMICRAY).o $(COSMICRAYFLUX).o $(TESTFIELD).o $(PARTICLES).o $(PARTICLES_RADIUS).o $(PARTICLES_NUMBER).o $(PLANET).o $(PARTICLES_SELFGRAVITY).o
comm_deps=$(technical) sub.o $(IO).o snapshot.o param_io.o $(MPICOMM_FIX).o $(physics) $(FFT).o $(FFTPACK).o $(POWER).o $(STRUCT_FUNC).o $(PARTICLES_MAIN).o $(PARTICLES_SUB).o
start_deps_f90=$(comm_deps) $(GRID).o
start_deps=$(start_deps_f90) $(DEBUG).o
run_deps_f90=$(comm_deps) equ.o $(TIMESTEP).o
run_deps=$(run_deps_f90) $(DEBUG).o
shock_finder_deps=cparam.o
start_fast_deps=cparam.f90 cdata.f90 general.f90 $(FFT).f90 $(MPICOMM_FIX).f90 deriv.f90 sub.f90 $(PARTICLES_SUB).f90 $(INITCOND_SPEC).f90 $(DEBUG).o $(IO).f90 $(GLOBAL).f90 $(POISSON).o $(GRAVITY).f90 $(SELFGRAVITY).o $(EOS).f90 slices.f90 initcond.f90 $(SPECIAL).f90 $(DENSITY).f90 $(VISCOSITY).f90 $(SHOCK).f90 $(MAGNETIC).f90 $(COSMICRAY).f90 $(COSMICRAYFLUX).f90 $(HYDRO).f90 $(INTERSTELLAR).f90 $(ENTROPY).f90 $(RADIATION).f90 boundcond.f90 filter.f90 $(FORCING).f90 $(SHEAR).f90 $(PSCALAR).f90 $(CHIRAL).f90 $(DUSTVELOCITY).f90 $(DUSTDENSITY).f90 $(PARTICLES).o $(TIMEAVG).f90 param_io.f90 prints.f90 register.f90 $(POWER).f90 $(STRUCT_FUNC).f90 snapshot.f90 $(FFTPACK).f $(GRID).f90 $(PLANET).f90 start.f90
run_fast_deps=cparam.f90 cdata.f90 general.f90 $(FFT).f90 $(MPICOMM_FIX).f90 deriv.f90 sub.f90 $(PARTICLES_SUB).f90 $(INITCOND_SPEC).f90 $(DEBUG).o $(IO).f90 $(GLOBAL).f90 $(POISSON).o $(GRAVITY).f90 $(SELFGRAVITY).o $(EOS).f90 slices.f90 initcond.f90 $(SPECIAL).f90 $(DENSITY).f90 $(VISCOSITY).f90 $(SHOCK).f90 $(MAGNETIC).f90 $(COSMICRAY).f90 $(COSMICRAYFLUX).f90 $(HYDRO).f90 $(INTERSTELLAR).f90 $(ENTROPY).f90 $(RADIATION).f90 boundcond.f90 filter.f90 $(FORCING).f90 $(SHEAR).f90 $(PSCALAR).f90 $(CHIRAL).f90 $(DUSTVELOCITY).f90 $(DUSTDENSITY).f90 $(PARTICLES).f90 equ.f90 $(TIMESTEP).f90 $(TIMEAVG).f90 param_io.f90 prints.f90 register.f90 $(POWER).f90 $(STRUCT_FUNC).f90 snapshot.f90 $(FFTPACK).f $(PLANET).f90 run.f90
start=start.o $(start_deps)
run=run.o $(run_deps)
shock_finder=$(SHOCK_FINDER).o $(shock_finder_deps)
#merge_tony var2ascii_deps=cparam.o
#merge_tony var2ascii=var2ascii.o $(var2ascii_deps)
read_videofiles_deps=cparam.o cdata.o general.o
read_videofiles=read_videofiles.o $(read_videofiles_deps)
read_vectorfiles_deps=cparam.o cdata.o general.o
read_vectorfiles=read_vectorfiles.o $(read_vectorfiles_deps)
TAG_SOURCE=$(run_deps_f90:.o=.f90) start.f90 run.f90 debug_c.c read_videofiles.f90
PC_XMLEXPORT=$(PENCIL_HOME)/bin/pc_xmlexport

# ---------------------------------------------------------------------- #
## Symbolic targets

default: start_buildtime Makefile Makefile_inc cparam.inc code stop_buildtime buildinfo

pacx: pacx-makefile cparam.inc code

# Create Makefile.inc, but need this to be a `phony' target (i.e. not a
# filename as target), so this file is always written.
# Don't know whether .phony declaration is portable, so we just slightly
# rename the target.
Makefile_inc:
	@printf \
	    "%s\n" \
	    "# src/Makefile.inc                      -*-Makefile-*- (for Emacs)" \
	    "# ----------------" \
	    "" \
	    "# This file was automatically generated at `date` by 'make'." \
	    "# Its main role is to set the precision (single vs. double) of a" \
	    "# run for compilation." \
	    "" > Makefile.inc
	@case "$(REAL_PRECISION)" in \
	default|4) \
	    ;; \
	double|8) \
	    echo "FFLAGS_GENERAL=$(FFLAGS_GENERAL) $(FFLAGS_DOUBLE)" >> Makefile.inc; \
	    echo "CFLAGS_GENERAL=$(CFLAGS_GENERAL) $(CFLAGS_DOUBLE)" >> Makefile.inc; \
	    case "$(MPICOMM)" in \
	    mpicomm) \
	        echo "MPICOMM=mpicomm_double" >> Makefile.inc; \
	        ;; \
	    mpicomm_) \
	        echo "MPICOMM=mpicomm_double_" >> Makefile.inc; \
	        ;; \
	    esac; \
	    ;; \
	*) \
	    echo "What is REAL_PRECISION=$(REAL_PRECISION) supposed to mean?"; \
	    exit 1; \
	    ;; \
	esac

Makefile: Makefile.src
	scripts/check-mkfile Makefile.local Makefile.src
	scripts/adapt-mkfile Makefile.src Makefile
pacx-makefile: Makefile.src
	scripts/acx-adapt-mkfile Makefile.src pacx-Makefile
	cp pacx-Makefile Makefile
depend dep: 
	rm -f Makefile.depend
	scripts/mkdep start.f90 run.f90 equ.f90 $(TIMESTEP).f90 $(comm_deps:.o=.f90) > Makefile.depend
# Generate files for automated debugging and testing etc.
start_buildtime:
	@echo "<buildtime><timestamp type='start'>`date`</timestamp>" > .buildtime
stop_buildtime:
	@echo "<timestamp type='end'>`date`</timestamp></buildtime>" >> .buildtime
buildinfo: 
	@$(PC_XMLEXPORT) buildinfo -e "CC='$(CC)';CFLAGS='$(CFLAGS)';F90='$(F90)';F77='$(F77)';" \
	                       -e "FFLAGS='$(FFLAGS)';F90FLAGS='$(F90FLAGS)';F77FLAGS='$(F77FLAGS)';" \
	                       -e "FCCLEANER='$(FCCLEANER)';LDMPI='$(LDMPI)';LDONLYFLAGS='$(LDONLYFLAGS)';" \
	                       -e "FFLAGS_GENERAL='$(FFLAGS_GENERAL)';CFLAGS_GENERAL='$(CFLAGS_GENERAL)';" \
	                       -e "FC='$(FC)';" \
	                       -e "MPICOMM='$(MPICOMM_FIX)';GLOBAL='$(GLOBAL)';GRID='$(GRID)';IO='$(IO)';FFT='$(FFT)';" \
	                       -e "FFTPACK='$(FFTPACK)';POWER='$(POWER)';DEBUG='$(DEBUG)';HYDRO='$(HYDRO)';" \
	                       -e "VISCOSITY='$(VISCOSITY)';DENSITY='$(DENSITY)';ENTROPY='$(ENTROPY)';" \
	                       -e "MAGNETIC='$(MAGNETIC)';RADIATION='$(RADIATION)';PSCALAR='$(PSCALAR)';" \
	                       -e "CHIRAL='$(CHIRAL)';DUSTVELOCITY='$(DUSTVELOCITY)';DUSTDENSITY='$(DUSTDENSITY)';" \
	                       -e "INTERSTELLAR='$(INTERSTELLAR)';COSMICRAY='$(COSMICRAY)';COSMICRAYFLUX='$(COSMICRAYFLUX)';" \
	                       -e "EOS='$(EOS)';STRUCT_FUNC='$(STRUCT_FUNC)';INITCOND_SPEC='$(INITCOND_SPEC)';SHOCK='$(SHOCK)';" \
	                       -e "TESTFIELD='$(TESTFIELD)';GRAVITY='$(GRAVITY)';FORCING='$(FORCING)';SHEAR='$(SHEAR)';" \
	                       -e "TIMEAVG='$(TIMEAVG)';SPECIAL='$(SPECIAL)';PARTICLES='$(PARTICLES)';PARTICLES_SUB='$(PARTICLES_SUB)';" \
	                       -e "PARTICLES_MAIN='$(PARTICLES_MAIN)';PARTICLES_RADIUS='$(PARTICLES_RADIUS)';" \
			       -e "PLANET='$(PLANET)';"\
	                       -e "SHOCK_PROFILE='$(SHOCK_PROFILE)';SHOCK_FINDER='$(SHOCK_FINDER)';" > .buildinfo

#
# Ignore cparam dependencies upon .f90 files to save a few time consuming
# recompiles! Just check for switching of modules instead.
depend.dot: Makefile.src Makefile.local scripts/mkdot
	scripts/mkdot $(run:.o=.f90) > run.dot
	scripts/mkdot $(start:.o=.f90) > start.dot
	scripts/mkdot $(physics:.o=.f90) > depend.dot
cparam.inc: Makefile.src Makefile.local scripts/mkcparam
	scripts/mkcparam $(physics:.o=.f90) cparam.local -o cparam.inc

shock_profile.inc: Makefile.src Makefile.local $(SHOCK_FINDER).f90 $(shock_finder_deps) $(SHOCK_PROFILE).desc
	+if [ -f $(SHOCK_PROFILE).inc ]; then \
          rm -f shock_profile.inc; \
          ln -s $(SHOCK_PROFILE).inc shock_profile.inc; \
	elif [ -f $(SHOCK_PROFILE).desc ]; then \
          $(MAKE) $(SHOCK_FINDER).x; \
          ./$(SHOCK_FINDER).x < $(SHOCK_PROFILE).desc > shock_profile.inc; \
        fi

mpicomm_double.f90: mpicomm.f90
	sed -e 's/REAL/DOUBLE_PRECISION/g' mpicomm.f90 > mpicomm_double.f90
mpicomm_.f90: mpicomm.f90
	perl -pe 's/(MPI_[A-Z1-9_]*)([ (])/$$1_$$2/g' mpicomm.f90 > mpicomm_.f90
mpicomm_double_.f90: mpicomm_double.f90
	perl -pe 's/(MPI_[A-Z1-9_]*)([ (])/$$1_$$2/g' mpicomm_double.f90 > mpicomm_double_.f90
nompicomm_.f90: nompicomm.f90
	cp nompicomm.f90 nompicomm_.f90
# The strange construct below is needed to have `make' realize there was
# an error even when last command in pipe is FCCLEANER:
EXECUTABLES=start.x run.x \
	read_videofiles.x read_vectorfiles.x 
        # write_dummy_namelists.x
code:
	if [ ! -z "$(FCCLEANER)" ]; then \
	    ($(MAKE) $(MAKEOPTS) $(EXECUTABLES) \
	    || echo "PENCIL COMPILATION ERROR") $(FCCLEANER) ; \
	else \
	    $(MAKE) $(MAKEOPTS) $(EXECUTABLES) ; \
	fi

FASTEXECS=startfast.x runfast.x read_videofiles.x read_vectorfiles.x
fast:
	if [ ! -z "$(FCCLEANER)" ]; then \
	    ($(MAKE) $(MAKEOPTS) $(FASTEXECS) \
	    || echo "PENCIL COMPILATION ERROR") $(FCCLEANER) ; \
	else \
	    $(MAKE) $(MAKEOPTS) $(FASTEXECS) ; \
	fi

debug:
	if [ ! -z "$(FCCLEANER)" ]; then \
	    ($(MAKE) $(MAKEOPTS) FFLAGS='$(FFLAGS) $(DEBUGFLAGS)' start.x run.x \
	    || echo "PENCIL COMPILATION ERROR") $(FCCLEANER) ; \
	else \
	    $(MAKE) $(MAKEOPTS) FFLAGS='$(FFLAGS) $(DEBUGFLAGS)' start.x run.x; \
	fi


start.x: $(start) Makefile.local
	$(LD) $(LDFLAGS) $(start) $(LDMPI) -o start.x 

run.x: $(run) Makefile.local
	$(LD) $(LDFLAGS) $(run) $(LDMPI) $(LIBSIG) -o run.x 

runfast.x: $(run_fast_deps) Makefile.local
	$(FC) -o runfast.x $(FFLAGS) $(FFLAGS_GENERAL) $(F90FLAGS) $(run_fast_deps) $(LDFLAGS) $(LDMPI) $(LIBSIG) 

startfast.x: $(start_fast_deps) Makefile.local
	$(FC) -o startfast.x $(FFLAGS) $(FFLAGS_GENERAL) $(F90FLAGS) $(start_fast_deps) $(LDFLAGS) $(LDMPI) 

shock_finder.x: $(shock_finder) Makefile.local
	$(LD) $(LDFLAGS) $(shock_finder) $(LDMPI) $(LIBSIG) -o shock_finder.x 

# Handy for debugging; just compile by hand what is changed.
# When you use this you must be certain that everying is consistent.
linkonly:
	$(LD) $(LDFLAGS) $(start) $(LDMPI) -o start.x
	$(LD) $(LDFLAGS) $(run) $(LDMPI) $(LIBSIG) -o run.x 
#shorthand for this
l:
	$(MAKE) $(MAKEOPTS) linkonly

# Needed for the underscore trick:
mpicomm_.f90:      mpicomm.f90

# Shortcut for debugging radiation:
rad:
	ifc -c radiation_exp.f90
	$(LD) $(LDFLAGS) $(start) $(LDMPI) -o start.x
	$(LD) $(LDFLAGS) $(run) $(LDMPI) $(LIBSIG) -o run.x 

# Remove all build files, but keep executables
# (misleading name..)
run:
	rm -f *.o *.mod *.d 
	rm -f work.pc work.pcl

# Alternative to make run. To copy executables to parent directory.
# Make clean(n) could then be run on the source.
# (misleading name..)
install:
	cp *.x ../

# TAGS file for Emacs.
# $(TAG_SOURCE) requires nofftpack.f90 or fft.f90 to exist, so we
# temporarily create them
nofftpack.f90:
	@ touch nofftpack.f90
fft.f90:
	@ touch fft.f90
TAGS: $(TAG_SOURCE)
	etags $(TAG_SOURCE)
	@ if [ ! -s nofftpack.f90 ]; then rm -f nofftpack.f90; fi
	@ if [ ! -s fft.f90 ]; then rm -f fft.f90; fi

# Clean up, but leave makefile and TAGS
clean:
	rm -f *.x *.o *.mod *.d cparam.inc cparam_pencils.inc *.il mpicomm_.f90
	rm -f work.pc work.pcl .buildinfo .buildtime
	printf "# %s\n" "Empty" "(This file was written by 'make')" > Makefile.inc

# Clean up all
cleann: clean
	rm -f Makefile TAGS mpicomm_.f90
	$(MAKE) $(MAKEOPTS) -f Makefile.src Makefile
# same thing
cleanall: cleann

## ---------------------------------------------------------------------- #
## Code targets
## ---------------------------------------------------------------------- #

read_videofiles.x: $(read_videofiles)
	$(LD) $(LDFLAGS) $(read_videofiles) $(LDMPI) -o read_videofiles.x 

read_vectorfiles.x: $(read_vectorfiles)
	$(LD) $(LDFLAGS) $(read_vectorfiles) $(LDMPI) -o read_vectorfiles.x 

var2ascii.x: $(var2ascii)
	$(LD) $(LDFLAGS) $(var2ascii) $(LDMPI) -o var2ascii.x 

write_dnlists_deps=write_dummy_namelists.o $(comm_deps) $(DEBUG).o
write_dummy_namelists.x: $(write_dnlists_deps)
	$(LD) $(LDFLAGS) $(write_dnlists_deps) $(LDMPI) -o write_dummy_namelists.x

## ---------------------------------------------------------------------- #
## Non-F90 / undetectable dependencies
## ---------------------------------------------------------------------- #
#
fft.o:	     fft.f Makefile.src
$(FFTPACK).o:   $(FFTPACK).f Makefile.src Makefile.local
#fft_nr.o:    fft_nr.f90
$(MPICOMM_FIX).o:         $(FFT).o 
$(MAGNETIC).o:        $(FFT).o
$(FFT).o:	          cdata.o
nodebug.o:            nodebug.f90 cdata.o $(MPICOMM_FIX).o
#$(TIMEAVG).o:        ctimeavg.local
#axeltest $(INITCOND_SPEC).o:$(INITCOND_SPEC).f90
write_dummy_namelists.o: write_dummy_namelists.f90 $(comm_deps)

## ---------------------------------------------------------------------- #
## Dependencies
## ---------------------------------------------------------------------- #
include Makefile.depend

# DO NOT DELETE
