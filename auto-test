#!/usr/bin/perl -w

# Name:   auto-test
# Author: wd (Wolfgang.Dobler@kis.uni-freiburg.de)
# Date:   12-Aug-2002
# Description:
#   Test compilation and results on a set of sample directories to
#   validate the pencil code. Uses Perl because of the Test/Test::Harness
#   module and because we need to do pattern mathcing to extract the
#   relevant output lines.

use strict;
#use Test::Harness;
use Test;
use Cwd;

my $res;
my @sampdirs = qw( conv-slab conv-slab-flat );

plan(tests => 2*4);		# Number of tests to carry out

die "Need to set environment variable PENCIL_HOME\n" 
    unless (defined($ENV{PENCIL_HOME}));
$ENV{PATH} .= ":$ENV{PENCIL_HOME}/bin";

for my $d (@sampdirs) {
    test_rundir("samples/$d");
}


# ---------------------------------------------------------------------- #

sub test_shell_cmd {
    my $cmd = shift;

    my $res = `$cmd 2>&1`;
    chomp($res);
    ok($?,0,$res);		# $? means success
    $res;			# Return output so we can analyze it if desired
}

sub test_compile {
# Test compilation only
    test_shell_cmd('cd src; make');
}

sub test_run {
# Test starting and running only (does not analyze output, but returns it)
    print "  Starting..\n";
    test_shell_cmd('start.csh');
    print "  Running..\n";
    test_shell_cmd('run.csh');	# returns the output
}

sub test_rundir {
# Test compilation, starting, running and results on 
    my $dir = shift;
    my $topdir = cwd;

    chdir $dir;
    print cwd, ":\n";
    if (! defined(-e 'src/run.f90')) { # has `lnsrc' been run yet?
	system('lnsrc');
    }
    print "  Compiling..\n";
    test_compile();
    if (!-d 'tmp') {
	print "No tmp directory; generating tmp -> /var/tmp/pencil\n";
	system('mkdir -p /var/tmp/pencil; ln -s /var/tmp/pencil tmp');
    }
    test_run();
    # need to check the output here..
    print "  Not chekcing output, but ought to..\n";    
    ok(1);
    chdir $topdir;
}

# End of file auto-test
