#!/bin/sh
#  -*-Perl-*-
#======================================================================#
# Run the right perl version:
if [ -x /usr/local/bin/perl ]; then
  perl=/usr/local/bin/perl
elif [ -x /usr/bin/perl ]; then
  perl=/usr/bin/perl
else
  perl=`which perl| sed 's/.*aliased to *//'`
fi

exec $perl -x -S $0 "$@"     # -x: start from the following line
#======================================================================#
#! /Good_Path/perl -w 
# line 17

# Name:   cleanf95
# Author: Tony Mee (A.J.Mee@ncl.ac.uk)
# Date:   10-Oct-2002
# CVS: $Id: cleanf95,v 1.4 2003-08-26 18:02:07 dobler Exp $
# Description:
#   Read standard input (piped from Intel Fortran compiler with 2>&1 | 
#   i.e. from STDERR)
#   Strip all the subroutine / function lines and dump the rest back
#   out to STDERR
# Usage:
#   make |& cleanf95

my $Identi = '[A-Za-z_0-9%]+';	# valid chars of F90 identifiers
my $IDENTI = '[A-Z_0-9]+';	# ..as capitalized by compiler
my $identi = '[a-z_0-9]+';	# ..as downcased by compiler
my $fname  = '[-.a-zA-Z_0-9/]+';	# valid chars of file names
$| = 1;         # auto-flush output
while(<STDIN>)
{
  # Intel F95 compiler
  next if /^\s*(module|external)\s+(subroutine|function)\s+$IDENTI\s*$/;
  next if /^\s*(program|module)\s+$IDENTI\s*$/;
  next if /^[0-9]+\s*lines compiled/i;
  next if /^\s*$/;

  # Hitachi F90 compiler
  next if /^f90: compile start : $fname$/;
  next if /^\*OFORT90 V01-04 entered.$/;
  next if /^\*end of compilation : $Identi\s*$/;
  next if /^\*program name = $Identi\s*$/;
  next if /^\*program units = 0001, no diagnostics generated\.$/;
  next if /^\*program units = 0001,\s*[0-9]+\s+diagnostics generated, highest severity code is  00$/;
  next if /^KCHF656K -I the following file is$/;
  next if /^            referred.--$fname$/;
  next if /^            $fname$/;

  print STDERR $_;
}
