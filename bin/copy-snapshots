#!/bin/csh

# Name:   copy-snapshots
# Author: wd (Wolfgang.Dobler@kis.uni-freiburg.de)
# Date:   24-Sep-2002
# Description:
#   Copy snapshots VAR# from /scratch to $PBS_O_WORKDIR (from where the
#   code started).
#     Relies on PBS (and on tcsh)  and is needed on Horseshoe (the Odense
#   cluster).
#     Should better be a Perl script.

set debug = 0

if ($#argv > 0) then
  if (($1 == "-v") || ($1 == "--verbose")) then
    set debug = 1
    shift
  endif
endif

if ($#argv > 0) then
  set varfile = $1
endif

set targetdir = $PWD/data
set nodelist = (`echo $NODELIST | sed 's/:/ /'`) # unpack NODELIST

if ($debug) then
  echo "SCRATCH_DIR = $SCRATCH_DIR"
  echo "targetdir = $targetdir"
  echo "nodelist = $nodelist"
endif

if ($?varfile) then		# explicit filename given
  foreach node ($nodelist)

    echo "copy-snapshots: working on $node.."
    if ($debug) echo "node=$node; targetdir=$targetdir"
    if ($debug) $SSH $node "ls -ltd $SCRATCH_DIR $SCRATCH_DIR/proc*/$varfile $targetdir/proc*/$varfile"
    # Copy all files you find (not efficient on dual-CPU systems, unless
    # we would delete files after copying..)
    # Extremely awkward due to quoting rules:
    set cmd1 = "cd $SCRATCH_DIR; "
    set cmd2 = 'for f in `'
    set cmd3 = "ls proc*/$varfile"
    set cmd4 = '`; do cp '
    set cmd5 = "$SCRATCH_DIR/"
    set cmd6 = '$f '
    set cmd7 = "$targetdir/"
    set cmd8 = '$f; done'
    set remcmd = "$cmd1$cmd2$cmd3$cmd4$cmd5$cmd6$cmd7$cmd8"
    $SSH $node sh -x -c "'$remcmd'"
  end

else

  # Get size of var.dat (must exist, since run.csh only ever runs after
  # start.csh). Quite some silly hack.
  set lsout = (`ls -l "$targetdir/proc0/var.dat"`)
  set size = $lsout[5]

  while (1)
    echo
    date
    foreach node ($nodelist)
      if ($debug) echo "node=$node"
      echo '$targetdir' $targetdir
      foreach file (`$SSH $node "cd $SCRATCH_DIR; ls proc*/VAR[0-9]*"`)
	set lsout = (`$SSH $node ls -l "$SCRATCH_DIR/$file"`)
        set VARsize = $lsout[5]
        if ($VARsize >= $size) then
	  # if file is ready, copy it and delete original 
	  if ($debug) echo "Moving ${node}:$SCRATCH_DIR/$file to $targetdir/$file"
	  if ($debug) echo "$SSH $node 'mv $SCRATCH_DIR/$file $targetdir/$file'"
	  $SSH $node "mv -f $SCRATCH_DIR/$file $targetdir/$file"
        else
	  if ($debug) echo "Size of $SCRATCH_DIR/$file < $size, so not copying yet"
        endif
      end
    end

    if (! $?varfile) then
      sleep 300			# only check every 5 minutes
    endif
  end

endif

# End of file copy-snapshots
