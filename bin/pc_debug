#!/usr/bin/perl -w

# Name:   pc_deb\ug
# Author: wd (wdobler [at] gmail [dot] com)
# Date:   06-May-2009
# Description:
#   Compile and run the code with the maximum of available diagnostic
#   options

use strict;

my $debug = 1;

my $make = ( $ENV{MAKE}      || 'make');
my @makeflags = ();
my $g95 = 'g95 -fno-second-underscore -std=f95';
my $fflags_sloppy = '-O0 -g -freal=nan -finteger=-2147483648 -fbounds-check -ftrace=full -Wall -Wno=140,141,109,112,137';



check_data_dir();
clean_out();

run_cmd($make, @makeflags,
        "FC=$g95",
        'F77=$(FC)',
        'FFLAGS=',
        "FFLAGS_SLOPPY=$fflags_sloppy",
        'F90FLAGS=$(FFLAGS_SLOPPY) -Werror',
        'F77FLAGS=$(FFLAGS_SLOPPY)',
        'FFLAGS_DOUBLE=-r8',
        'CC=gcc',
        'CFLAGS=-O3 -Wall -DFUNDERSC=1',
        @ARGV
       );

set_env_vars();
run_cmd('./start.csh');
run_cmd('./run.csh');

# ---------------------------------------------------------------------- #
sub clean_out {
#
# Run `make clean'.
# Ideally, this would ask the user if there are .o files around and no
# .debugging (or some such) file is found.
#
    run_cmd("$make", 'cleanall');
}
# ---------------------------------------------------------------------- #
sub check_data_dir {
#
# Make sure we have a data/ dir
#
    unless (-d './data') {
        print "Missing data/ directory. Abort? [Y/n]";
        my $answer = <STDIN>;
        chomp($answer);
        logger("\$answer = <$answer>");
        if ($answer =~ /^\s*[yY]/) {
            print "Quitting\n";
            exit 1;
        } else {
            print "Continuing."
              . " You may want to call `pc_mkdatadir' in the background...\n";
        }
    }
}

# ---------------------------------------------------------------------- #
sub run_cmd {
#
# Run a command through system();
#
    my @args = @_;

    print "system(@args)\n" if ($debug);
    system(@args) == 0 or die "$args[0] failed: $!\n";
}
# ---------------------------------------------------------------------- #
sub set_env_vars {
#
# Set a number of G95_XXX environment variables for runtime debugging
#
    # $ENV{'G95_FPU_PRECISION'}  = '53';
    $ENV{'G95_MEM_INIT'}       = 'NAN';
    $ENV{'G95_FPU_EXCEPTIONS'} = 'Yes';
    $ENV{'G95_MEM_MAXALLOC'}   = 'Yes';
    $ENV{'G95_FPU_ZERODIV'}    = 'Yes';
    $ENV{'G95_FPU_OVERFLOW'}   = 'Yes';
    $ENV{'G95_SHOW_LOCUS'}     = 'Yes';
    $ENV{'G95_FPU_INVALID'}    = 'Yes';
}

# End of file debug
